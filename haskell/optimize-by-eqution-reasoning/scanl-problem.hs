module ScanlProblem where

inits :: [a] -> [[a]]
inits []     = [[]]
inits (x:xs) = [] : map (x:) (inits xs)
-- inits [1,2,3] = [] : map (1:) (inits [2, 3])
--               = [] : map (1:) ([] : map (2:) (inits [3]))
--               = [] : map (1:) ([] : map (2:) ([] : map (3:) (inits [])))
--               = [] : map (1:) ([] : map (2:) ([] : map (3:) [[]]))
--               = [] : map (1:) ([] : map (2:) ([] : [[3]]))
--               = [] : map (1:) ([] : map (2:) [[], [3]])
--               = [] : map (1:) ([] : [[2], [2, 3]])
--               = [] : map (1:) ([[], [2], [2, 3]])
--               = [] : [[1], [1, 2], [1, 2, 3]]
--               = [[], [1], [1, 2], [1, 2, 3]]

scanl' :: (b -> a -> b) -> b -> [a] -> [b]
scanl' f e = (map (foldl f e)) . inits
-- scanl' (+) 0 [1,2,3] = map (foldl (+) 0) [[], [1], [1,2], [1,2,3]]
--                      = [0, (0+1), (0+1+2), (0+1+2+3)]
--                      = [0,1,3,6]
